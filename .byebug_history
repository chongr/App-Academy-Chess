q
q 
q
self.piece_list[:white][4].object_id
self.piece_list[:white][5].object_id
self.piece_list[:white][3].object_id
self.piece_list[:white][3].objectid
self.piece_list[:white][4].objectid
self.piece_list[:white][4].object_id
@grid[4][4].object_id
@grid[4][4].objectid
@grid[4][4]
to_pos
from_pos
c
to_pos
quit
Has Moved = true
Position = [4, 4]
Color = white
Type = Pawn
@piece_list[:white].each {|piece| puts piece.pretty_print}
self.pretty_grid
self.pretty_print
c
q
self.pretty_grid
@piece_list[:white].each {|piece| puts piece.pretty_print}
@piece_list[:white].each {|piece| puts s = "potato"; puts piece.pretty_print}
@piece_list[:white].each {|piece| puts s = "potato"}
@piece_list
@piece_list[:white].each {|piece| print piece.pretty_print}
@piece_list[:white].each do |piece|
@piece_list[:white]
opponents_valid_moves
self.pretty_grid
c
self.pretty_grid
c
self.pretty_grid
opponents_valid_moves
c
q
test_board.pretty_grid
c
test_board.pretty_grid
c
q
test_board
c
test_board.pretty_grid
c
@display.valid_moves
c
@display.valid_moves
valid_moves
c
@display.valid_moves
c
c 
c
print @display.valid_moves
@display.valid_moves
c
print @display.valid_moves
@display.valid_moves
test_board.check?(:black)
test_board.pretty_grid
c
test_board.pretty_grid
test_board.pretty_print
c
q
c
test_board.check?(:white)
test_board.check?(:black)
test_board.grid[3][3]
c
 c
quit
selected
n
selected
n
exit
c
track_position
continue
exit
@board.grid[track_position[0]][track_position[1]]
track_position
track_positions
@board.grid
@board
